# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI

on:
  push:
  workflow_dispatch:
jobs:
  CI:
    uses: ./.github/workflows/build_maven.yml
    secrets: inherit
  Build_Docker:
    needs: CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/download-artifact@v4
      with:
        name: maven-dist
        path: target
    - name: Set Up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set Up Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ghostchu/peerbanhelper-snapshot
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,ci-jvm-universal
          type=raw,ci
          type=sha
    - name: Build and push Docker image
      uses: docker/build-push-action@v6.7.0
      with:
        context: .
        file: ./Dockerfile-CI
        push: true
        platforms: |
          linux/amd64
          linux/arm64/v8
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}-jvm-universal
        cache-from: type=gha
        cache-to: type=gha,mode=max
  Build_SPK:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: get-version
        uses: jactions/maven-version@v1.2.0
      - uses: actions/download-artifact@v4
        with:
          name: maven-dist
          path: target/
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
      - name: Run build script
        run: sudo PBH_VERSION=${{ env.PBH_VERSION }} IMAGE=${{ env.IMAGE }} bash synopkg/build-script.sh
        env:
          PBH_VERSION: ${{ steps.get-version.outputs.version }}
          IMAGE: ghostchu/peerbanhelper-snapshot:sha-${{ env.COMMIT_SHORT_SHA }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: synology-spk
          path: |
            /toolkit/build_env/ds.apollolake-7.2/image/packages/*.spk